{"version":3,"file":"index.js","sourceRoot":"","sources":["../../lib/validate/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { Range, Point } from 'atom'\nimport { showError } from './helpers'\nimport type { UI, Linter, Message, Indie } from '../types'\n\nconst VALID_SEVERITY = new Set(['error', 'warning', 'info'])\n\nfunction validateUI(ui: UI): boolean {\n  const messages = []\n\n  if (ui && typeof ui === 'object') {\n    if (typeof ui.name !== 'string') {\n      messages.push('UI.name must be a string')\n    }\n    if (typeof ui.didBeginLinting !== 'function') {\n      messages.push('UI.didBeginLinting must be a function')\n    }\n    if (typeof ui.didFinishLinting !== 'function') {\n      messages.push('UI.didFinishLinting must be a function')\n    }\n    if (typeof ui.render !== 'function') {\n      messages.push('UI.render must be a function')\n    }\n    if (typeof ui.dispose !== 'function') {\n      messages.push('UI.dispose must be a function')\n    }\n  } else {\n    messages.push('UI must be an object')\n  }\n\n  if (messages.length) {\n    showError(\n      'Invalid UI received',\n      `These issues were encountered while registering the UI named '${ui && ui.name ? ui.name : 'Unknown'}'`,\n      messages,\n    )\n    return false\n  }\n\n  return true\n}\n\nfunction validateLinter(linter: Linter): boolean {\n  const messages = []\n\n  if (linter && typeof linter === 'object') {\n    if (typeof linter.name !== 'string') {\n      messages.push('Linter.name must be a string')\n    }\n    if (typeof linter.scope !== 'string' || (linter.scope !== 'file' && linter.scope !== 'project')) {\n      messages.push(\"Linter.scope must be either 'file' or 'project'\")\n    }\n    if (typeof linter.lintsOnChange !== 'boolean') {\n      messages.push('Linter.lintsOnChange must be a boolean')\n    }\n    if (!Array.isArray(linter.grammarScopes)) {\n      messages.push('Linter.grammarScopes must be an Array')\n    }\n    if (typeof linter.lint !== 'function') {\n      messages.push('Linter.lint must be a function')\n    }\n  } else {\n    messages.push('Linter must be an object')\n  }\n\n  if (messages.length) {\n    showError(\n      'Invalid Linter received',\n      `These issues were encountered while registering a Linter named '${linter && linter.name ? linter.name : 'Unknown'}'`,\n      messages,\n    )\n    return false\n  }\n\n  return true\n}\n\nfunction validateIndie(indie: Indie): boolean {\n  const messages = []\n\n  if (indie && typeof indie === 'object') {\n    if (typeof indie.name !== 'string') {\n      messages.push('Indie.name must be a string')\n    }\n  } else {\n    messages.push('Indie must be an object')\n  }\n\n  if (messages.length) {\n    showError(\n      'Invalid Indie received',\n      `These issues were encountered while registering an Indie Linter named '${\n        indie && indie.name ? indie.name : 'Unknown'\n      }'`,\n      messages,\n    )\n    return false\n  }\n\n  return true\n}\n\nfunction validateMessages(linterName: string, entries: Array<Message>): boolean {\n  const messages = []\n\n  if (Array.isArray(entries)) {\n    let invalidURL = false\n    let invalidIcon = false\n    let invalidExcerpt = false\n    let invalidLocation = false\n    let invalidSeverity = false\n    let invalidSolution = false\n    let invalidReference = false\n    let invalidDescription = false\n    let invalidLinterName = false\n\n    for (let i = 0, { length } = entries; i < length; ++i) {\n      const message = entries[i]\n      const { reference } = message\n      if (!invalidIcon && message.icon && typeof message.icon !== 'string') {\n        invalidIcon = true\n        messages.push('Message.icon must be a string')\n      }\n      if (\n        !invalidLocation &&\n        (!message.location ||\n          typeof message.location !== 'object' ||\n          typeof message.location.file !== 'string' ||\n          typeof message.location.position !== 'object' ||\n          !message.location.position)\n      ) {\n        invalidLocation = true\n        messages.push('Message.location must be valid')\n      } else if (!invalidLocation) {\n        const range = Range.fromObject(message.location.position)\n        if (\n          Number.isNaN(range.start.row) ||\n          Number.isNaN(range.start.column) ||\n          Number.isNaN(range.end.row) ||\n          Number.isNaN(range.end.column)\n        ) {\n          invalidLocation = true\n          messages.push('Message.location.position should not contain NaN coordinates')\n        }\n      }\n      if (\n        !invalidSolution &&\n        message.solutions &&\n        !Array.isArray(message.solutions) &&\n        !(message.solutions instanceof Promise)\n      ) {\n        invalidSolution = true\n        messages.push('Message.solutions must be valid')\n      }\n      if (\n        !invalidReference &&\n        reference &&\n        (typeof reference !== 'object' ||\n          typeof reference.file !== 'string' ||\n          typeof reference.position !== 'object' ||\n          !reference.position)\n      ) {\n        invalidReference = true\n        messages.push('Message.reference must be valid')\n      } else if (!invalidReference && reference && reference.position !== undefined) {\n        const position = Point.fromObject(reference.position)\n        if (Number.isNaN(position.row) || Number.isNaN(position.column)) {\n          invalidReference = true\n          messages.push('Message.reference.position should not contain NaN coordinates')\n        }\n      }\n      if (!invalidExcerpt && typeof message.excerpt !== 'string') {\n        invalidExcerpt = true\n        messages.push('Message.excerpt must be a string')\n      }\n      if (!invalidSeverity && !VALID_SEVERITY.has(message.severity)) {\n        invalidSeverity = true\n        messages.push(\"Message.severity must be 'error', 'warning' or 'info'\")\n      }\n      if (!invalidURL && message.url && typeof message.url !== 'string') {\n        invalidURL = true\n        messages.push('Message.url must be a string')\n      }\n      if (\n        !invalidDescription &&\n        message.description &&\n        typeof message.description !== 'function' &&\n        typeof message.description !== 'string'\n      ) {\n        invalidDescription = true\n        messages.push('Message.description must be a function or string')\n      }\n      if (!invalidLinterName && message.linterName && typeof message.linterName !== 'string') {\n        invalidLinterName = true\n        messages.push('Message.linterName must be a string')\n      }\n    }\n  } else {\n    messages.push('Linter Result must be an Array')\n  }\n\n  if (messages.length) {\n    showError(\n      'Invalid Linter Result received',\n      `These issues were encountered while processing messages from a linter named '${linterName}'`,\n      messages,\n    )\n    return false\n  }\n\n  return true\n}\n\nexport { validateUI as ui, validateLinter as linter, validateIndie as indie, validateMessages as messages }\n"]}