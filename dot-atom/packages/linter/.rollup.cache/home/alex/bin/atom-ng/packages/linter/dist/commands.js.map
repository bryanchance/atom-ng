{"version":3,"file":"commands.js","sourceRoot":"","sources":["../lib/commands.ts"],"names":[],"mappings":"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","sourcesContent":["import { CompositeDisposable, Emitter } from 'atom'\nimport type { Disposable } from 'atom'\n\nimport * as Helpers from './helpers'\nimport type { Linter, UI } from './types'\nimport type IndieDelegate from './indie-delegate'\n\nlet manifest: { version: number }\n\nfunction formatItem(item: { name: string } | string) {\n  let itemName: string\n  if (item && typeof item === 'object' && typeof item.name === 'string') {\n    itemName = item.name\n  } else if (typeof item === 'string') {\n    itemName = item\n  } else {\n    throw new Error('Unknown object passed to formatItem()')\n  }\n  return `  - ${itemName}`\n}\nfunction sortByName(item1: { name: string }, item2: { name: string }) {\n  return item1.name.localeCompare(item2.name)\n}\n\nexport class Commands {\n  private emitter: Emitter = new Emitter()\n  private subscriptions: CompositeDisposable = new CompositeDisposable()\n\n  constructor() {\n    this.subscriptions.add(\n      this.emitter,\n      atom.commands.add('atom-workspace', {\n        'linter:enable-linter': () => this.enableLinter(),\n        'linter:disable-linter': () => this.disableLinter(),\n      }),\n      atom.commands.add('atom-text-editor:not([mini])', {\n        'linter:lint': () => this.lint(),\n        'linter:debug': () => this.debug(),\n        'linter:toggle-active-editor': () => this.toggleActiveEditor(),\n      }),\n    )\n  }\n  lint() {\n    this.emitter.emit('should-lint')\n  }\n  debug() {\n    this.emitter.emit('should-debug')\n  }\n  enableLinter() {\n    this.emitter.emit('should-toggle-linter', 'enable')\n  }\n  disableLinter() {\n    this.emitter.emit('should-toggle-linter', 'disable')\n  }\n  toggleActiveEditor() {\n    this.emitter.emit('should-toggle-active-editor')\n  }\n\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  onShouldLint(callback: (...args: Array<any>) => any): Disposable {\n    return this.emitter.on('should-lint', callback)\n  }\n  onShouldDebug(callback: (...args: Array<any>) => any): Disposable {\n    return this.emitter.on('should-debug', callback)\n  }\n  onShouldToggleActiveEditor(callback: (...args: Array<any>) => any): Disposable {\n    return this.emitter.on('should-toggle-active-editor', callback)\n  }\n  onShouldToggleLinter(callback: (...args: Array<any>) => any): Disposable {\n    return this.emitter.on('should-toggle-linter', callback)\n  }\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n\n  dispose() {\n    this.subscriptions.dispose()\n  }\n}\n\nexport async function showDebug(standardLinters: Array<Linter>, indieLinters: Array<IndieDelegate>, uiProviders: Array<UI>) {\n  if (!manifest) {\n    manifest = require('../package.json')\n  }\n\n  const textEditor = atom.workspace.getActiveTextEditor()\n  if (textEditor === undefined) {\n    return\n  }\n  const textEditorScopes = Helpers.getEditorCursorScopes(textEditor)\n  const sortedLinters = standardLinters.slice().sort(sortByName)\n  const sortedIndieLinters = indieLinters.slice().sort(sortByName)\n  const sortedUIProviders = uiProviders.slice().sort(sortByName)\n\n  const indieLinterNames = sortedIndieLinters.map(formatItem).join('\\n')\n  const standardLinterNames = sortedLinters.map(formatItem).join('\\n')\n  const matchingStandardLinters = sortedLinters\n    .filter(linter => Helpers.shouldTriggerLinter(linter, false, textEditorScopes))\n    .map(formatItem)\n    .join('\\n')\n  const humanizedScopes = textEditorScopes.map(formatItem).join('\\n')\n  const uiProviderNames = sortedUIProviders.map(formatItem).join('\\n')\n\n  const ignoreGlob = atom.config.get('linter.ignoreGlob')\n  const ignoreVCSIgnoredPaths = atom.config.get('core.excludeVcsIgnoredPaths')\n  const disabledLinters = atom.config.get('linter.disabledProviders').map(formatItem).join('\\n')\n  const filePathIgnored = await Helpers.isPathIgnored(textEditor.getPath(), ignoreGlob, ignoreVCSIgnoredPaths)\n\n  atom.notifications.addInfo('Linter Debug Info', {\n    detail: [\n      `Platform: ${process.platform}`,\n      `Atom Version: ${atom.getVersion()}`,\n      `Linter Version: ${manifest.version}`,\n      `Opened file is ignored: ${filePathIgnored ? 'Yes' : 'No'}`,\n      `Matching Linter Providers: \\n${matchingStandardLinters}`,\n      `Disabled Linter Providers: \\n${disabledLinters}`,\n      `Standard Linter Providers: \\n${standardLinterNames}`,\n      `Indie Linter Providers: \\n${indieLinterNames}`,\n      `UI Providers: \\n${uiProviderNames}`,\n      `Ignore Glob: ${ignoreGlob}`,\n      `VCS Ignored Paths are excluded: ${ignoreVCSIgnoredPaths}`,\n      `Current File Scopes: \\n${humanizedScopes}`,\n    ].join('\\n'),\n    dismissable: true,\n  })\n}\n"]}