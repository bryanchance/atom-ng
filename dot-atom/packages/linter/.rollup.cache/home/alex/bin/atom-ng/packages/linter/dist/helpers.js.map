{"version":3,"file":"helpers.js","sourceRoot":"","sources":["../lib/helpers.ts"],"names":[],"mappings":"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","sourcesContent":["import arrayUnique from 'lodash/uniq'\nimport { Directory, Range, Point, PointCompatible, RangeCompatible } from 'atom'\nimport type { TextEditor } from 'atom'\nimport type { Linter, Message, MessageSolution, MessageLike, MessageSolutionLike } from './types'\n\nexport const $version = '__$sb_linter_version'\nexport const $activated = '__$sb_linter_activated'\nexport const $requestLatest = '__$sb_linter_request_latest'\nexport const $requestLastReceived = '__$sb_linter_request_last_received'\n\nexport function shouldTriggerLinter(linter: Linter, wasTriggeredOnChange: boolean, scopes: Array<string>): boolean {\n  if (wasTriggeredOnChange && !linter.lintsOnChange) {\n    return false\n  }\n  return scopes.some(function (scope) {\n    return linter.grammarScopes.includes(scope)\n  })\n}\n\nexport function getEditorCursorScopes(textEditor: TextEditor): Array<string> {\n  return arrayUnique(\n    textEditor.getCursors().reduce((scopes, cursor) => scopes.concat(cursor.getScopeDescriptor().getScopesArray()), ['*']),\n  )\n}\n\nlet minimatch: typeof import('minimatch')\nexport async function isPathIgnored(\n  filePath: string | null | undefined,\n  ignoredGlob: string,\n  ignoredVCS: boolean,\n): Promise<boolean> {\n  if (!filePath) {\n    return true\n  }\n\n  if (ignoredVCS) {\n    const directory = new Directory(filePath)\n    const repository = await atom.project.repositoryForDirectory(directory)\n    if (repository && repository.isPathIgnored(filePath)) {\n      return true\n    }\n  }\n  const normalizedFilePath = process.platform === 'win32' ? filePath.replace(/\\\\/g, '/') : filePath\n  if (!minimatch) {\n    minimatch = require('minimatch')\n  }\n  return minimatch(normalizedFilePath, ignoredGlob)\n}\n\nexport function updateMessageKey(message: Message) {\n  const { reference, location } = message\n  message.key = [\n    `$LINTER:${message.linterName}`,\n    `$LOCATION:${location.file}$${location.position.start.row}$${location.position.start.column}$${location.position.end.row}$${location.position.end.column}`,\n    reference\n      ? `$REFERENCE:${reference.file}$${reference.position ? `${reference.position.row}$${reference.position.column}` : ''}`\n      : '$REFERENCE:null',\n    `$EXCERPT:${message.excerpt}`,\n    `$SEVERITY:${message.severity}`,\n    message.icon ? `$ICON:${message.icon}` : '$ICON:null',\n    message.url ? `$URL:${message.url}` : '$URL:null',\n    typeof message.description === 'string' ? `$DESCRIPTION:${message.description}` : '$DESCRIPTION:null',\n  ].join('')\n}\n\nexport function normalizeMessages(linterName: string, messages: Array<Message | MessageLike>) {\n  for (let i = 0, { length } = messages; i < length; ++i) {\n    const message = messages[i]\n    const { reference, solutions } = message\n    // convert RangeCompatible to Range and PointCompatible to Point\n    // NOTE (this is not covered in the types, but done for backward compatibility)\n    message.location.position = getRangeClass(message.location.position)\n    if (reference !== undefined && reference.position !== undefined) {\n      reference.position = getPointClass(reference.position)\n    }\n    if (Array.isArray(solutions)) {\n      // NOTE if solutions is a {Promise<MessageSolutionLike[]>} of an array, we don't normalize them!\n      for (let j = 0, _length = solutions.length; j < _length; j++) {\n        const solution: MessageSolution | MessageSolutionLike = solutions[j]\n        solution.position = getRangeClass(solution.position)\n      }\n    }\n    message.version = 2\n    if (!message.linterName) {\n      message.linterName = linterName\n    }\n    // now the message is a {Message}\n    updateMessageKey(message as Message)\n  }\n}\n\n/* convert RangeCompatible to Range */\nfunction getPointClass(point: Point | PointCompatible): Point {\n  if (!(point instanceof Point)) {\n    return Point.fromObject(point)\n  }\n  return point\n}\n\n/* convert RangeCompatible to Range */\nfunction getRangeClass(range: Range | RangeCompatible): Range {\n  if (!(range instanceof Range)) {\n    return Range.fromObject(range)\n  }\n  return range\n}\n\n// update the key of the given messages\nexport function updateKeys(messages: Array<Message>) {\n  messages.forEach(m => {\n    updateMessageKey(m)\n  })\n}\n\n// create a map from keys to messages\nexport function createKeyMessageMap(messages: Array<Message>): Map<string, Message> {\n  const keyMessageMap = new Map()\n  for (let i = 0, { length } = messages; i < length; ++i) {\n    const message = messages[i]\n    keyMessageMap.set(message.key, message)\n  }\n  return keyMessageMap\n}\n\ninterface FlaggedMessages {\n  oldKept: Array<Message>\n  oldRemoved: Array<Message>\n  newAdded: Array<Message>\n}\n\n// This fast function returns the new messages and old messages by comparing their key against the cache.\n// This prevents re-rendering the already rendered messages\nexport function flagMessages(inputs: Array<Message>, oldMessages: Array<Message>): FlaggedMessages | null {\n  // inputs check\n  if (inputs === undefined || oldMessages === undefined) {\n    return null\n  }\n\n  // All the messages of the linter are new, no need to diff\n  // tag the messages for adding and save them to linter's cache\n  if (!oldMessages.length) {\n    // NOTE: No need to add .key here because normalizeMessages already does that\n    return { oldKept: [], oldRemoved: [], newAdded: inputs }\n  }\n\n  // The linter has no messages anymore\n  // tag all of its messages from cache for removal and empty the cache\n  if (!inputs.length) {\n    return { oldKept: [], oldRemoved: oldMessages, newAdded: [] }\n  }\n\n  // In all the other situations:\n  // perform diff checking between the linter's new messages and its cache\n\n  // create a map from keys to oldMessages\n  const cache = createKeyMessageMap(oldMessages)\n\n  // Find old kept and new added\n  const newAdded: Set<Message> = new Set()\n  const oldKept: Map<string, Message> = new Map()\n  for (let iInput = 0, len = inputs.length; iInput < len; iInput++) {\n    const input = inputs[iInput]\n    if (cache.has(input.key)) {\n      oldKept.set(input.key, input)\n    } else {\n      newAdded.add(input)\n    }\n  }\n\n  // Find old removed\n  const cacheKeys = Array.from(cache.keys())\n  const oldKeptKeys = Array.from(oldKept.keys())\n\n  const oldRemovedKeys = cacheKeys.filter(x => !oldKeptKeys.includes(x))\n\n  const oldRemoved: Set<Message> = new Set()\n  for (let iRemoved = 0, RemovedKeysLen = oldRemovedKeys.length; iRemoved < RemovedKeysLen; iRemoved++) {\n    // cache is created from oldMessages and oldRemovedKeys is a subset of oldMessages. So this will not be undefined\n    oldRemoved.add(cache.get(oldRemovedKeys[iRemoved]) as Message)\n  }\n\n  return {\n    oldKept: Array.from(oldKept.values()),\n    oldRemoved: [...oldRemoved],\n    newAdded: [...newAdded],\n  }\n}\n\n// fast mergeArray function\n// https://uilicious.com/blog/javascript-array-push-is-945x-faster-than-array-concat/\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nexport function mergeArray(arr1: Array<any>, arr2: Array<any>) {\n  if (!arr2.length) {\n    return\n  }\n  Array.prototype.push.apply(arr1, arr2)\n}\n"]}