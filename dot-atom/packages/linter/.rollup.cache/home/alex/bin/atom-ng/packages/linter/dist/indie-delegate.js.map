{"version":3,"file":"indie-delegate.js","sourceRoot":"","sources":["../lib/indie-delegate.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,mBAAmB,EAAE,MAAM,MAAM,CAAA;AAGnD,OAAO,KAAK,QAAQ,MAAM,YAAY,CAAA;AACtC,OAAO,EAAE,iBAAiB,EAAE,UAAU,EAAE,MAAM,WAAW,CAAA;AAGzD,MAAM,CAAC,OAAO,OAAO,aAAa;IAQhC,YAAY,KAAY,EAAE,OAAU;QANpC,UAAK,GAAc,SAAS,CAAA;QACpB,YAAO,GAAY,IAAI,OAAO,EAAE,CAAA;QAEhC,aAAQ,GAAmD,IAAI,GAAG,EAAE,CAAA;QACpE,kBAAa,GAAwB,IAAI,mBAAmB,EAAE,CAAA;QAGpE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;QAClB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAA;QACtB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;IACtC,CAAC;IACD,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAA;IACxB,CAAC;IACD,WAAW;QACT,MAAM,GAAG,GAAmB,EAAE,CAAA;QAC9B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YACxB,UAAU,CAAC,GAAG,EAAE,CAAC,CAAC,CAAA;QACpB,CAAC,CAAC,CAAA;QACF,OAAO,GAAG,CAAA;IACZ,CAAC;IACD,aAAa;QACX,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;YAChC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,CAAC,CAAA;YACnC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAA;SACtB;IACH,CAAC;IACD,WAAW,CAAC,QAA6C,EAAE,WAA8C,IAAI;QAE3G,IAAI,OAAO,QAAQ,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YAC5D,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAA;SACvD;QACD,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAE;YAC1E,OAAM;SACP;QACD,QAAQ,CAAC,OAAO,CAAC,UAAU,OAAO;YAChC,IAAI,OAAO,CAAC,QAAQ,CAAC,IAAI,KAAK,QAAQ,EAAE;gBACtC,OAAO,CAAC,KAAK,CAAC,mCAAmC,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,CAAC,CAAA;gBAChF,MAAM,IAAI,KAAK,CAAC,yDAAyD,CAAC,CAAA;aAC3E;QACH,CAAC,CAAC,CAAA;QAEF,iBAAiB,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAA;QACtC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAA;QACrC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAA;IACrD,CAAC;IACD,cAAc,CAAC,QAAwB;QACrC,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;YAC/B,OAAM;SACP;QAED,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;YAChD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAE;gBAC3C,OAAM;aACP;SACF;QACD,iBAAiB,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAA;QAEtC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAA;QACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,MAAM,EAAE,GAAG,QAAQ,EAAE,CAAC,GAAG,MAAM,EAAE,EAAE,CAAC,EAAE;YACtD,MAAM,OAAO,GAAY,QAAQ,CAAC,CAAC,CAAC,CAAA;YACpC,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAA;YACtC,IAAI,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;YAC9C,IAAI,CAAC,YAAY,EAAE;gBACjB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,YAAY,GAAG,EAAE,CAAC,CAAC,CAAA;aACjD;YACD,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;SAC3B;QACD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAA;IACrD,CAAC;IAGD,WAAW,CAAC,QAAsC;QAChD,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAA;IAChD,CAAC;IACD,YAAY,CAAC,QAAsC;QACjD,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAA;IACjD,CAAC;IAGD,OAAO;QACL,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;QAChC,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAA;QAC5B,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAA;IACvB,CAAC;CACF","sourcesContent":["import { Emitter, CompositeDisposable } from 'atom'\nimport type { Disposable } from 'atom'\n\nimport * as Validate from './validate'\nimport { normalizeMessages, mergeArray } from './helpers'\nimport type { Indie, Message } from './types'\n\nexport default class IndieDelegate {\n  private indie: Indie\n  scope: 'project' = 'project'\n  private emitter: Emitter = new Emitter()\n  version: 2\n  private messages: Map<string | null | undefined, Array<Message>> = new Map()\n  private subscriptions: CompositeDisposable = new CompositeDisposable()\n\n  constructor(indie: Indie, version: 2) {\n    this.indie = indie\n    this.version = version\n    this.subscriptions.add(this.emitter)\n  }\n  get name(): string {\n    return this.indie.name\n  }\n  getMessages(): Array<Message> {\n    const out: Array<Message> = []\n    this.messages.forEach(m => {\n      mergeArray(out, m)\n    })\n    return out\n  }\n  clearMessages(): void {\n    if (!this.subscriptions.disposed) {\n      this.emitter.emit('did-update', [])\n      this.messages.clear()\n    }\n  }\n  setMessages(filePath: string | Array<Record<string, any>>, messages: Array<Message> | null | undefined = null): void {\n    // v2 Support from here on\n    if (typeof filePath !== 'string' || !Array.isArray(messages)) {\n      throw new Error('Invalid Parameters to setMessages()')\n    }\n    if (this.subscriptions.disposed || !Validate.messages(this.name, messages)) {\n      return\n    }\n    messages.forEach(function (message) {\n      if (message.location.file !== filePath) {\n        console.debug('[Linter-UI-Default] Expected File', filePath, 'Message', message)\n        throw new Error('message.location.file does not match the given filePath')\n      }\n    })\n\n    normalizeMessages(this.name, messages)\n    this.messages.set(filePath, messages)\n    this.emitter.emit('did-update', this.getMessages())\n  }\n  setAllMessages(messages: Array<Message>): void {\n    if (this.subscriptions.disposed) {\n      return\n    }\n\n    if (!Array.isArray(messages) || atom.inDevMode()) {\n      if (!Validate.messages(this.name, messages)) {\n        return\n      }\n    }\n    normalizeMessages(this.name, messages)\n\n    this.messages.clear()\n    for (let i = 0, { length } = messages; i < length; ++i) {\n      const message: Message = messages[i]\n      const filePath = message.location.file\n      let fileMessages = this.messages.get(filePath)\n      if (!fileMessages) {\n        this.messages.set(filePath, (fileMessages = []))\n      }\n      fileMessages.push(message)\n    }\n    this.emitter.emit('did-update', this.getMessages())\n  }\n\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  onDidUpdate(callback: (...args: Array<any>) => any): Disposable {\n    return this.emitter.on('did-update', callback)\n  }\n  onDidDestroy(callback: (...args: Array<any>) => any): Disposable {\n    return this.emitter.on('did-destroy', callback)\n  }\n  /* eslint-enable @typescript-eslint/no-explicit-any */\n\n  dispose(): void {\n    this.emitter.emit('did-destroy')\n    this.subscriptions.dispose()\n    this.messages.clear()\n  }\n}\n"]}